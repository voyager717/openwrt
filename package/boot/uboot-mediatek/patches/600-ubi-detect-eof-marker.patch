--- a/drivers/mtd/ubi/attach.c	2022-07-11 14:42:58.000000000 +0100
+++ b/drivers/mtd/ubi/attach.c	2022-06-12 16:04:56.623658788 +0100
@@ -802,6 +802,13 @@
 	return err;
 }
 
+static bool ec_hdr_has_eof(struct ubi_ec_hdr *ech)
+{
+	return ech->padding1[0] == 'E' &&
+	       ech->padding1[1] == 'O' &&
+	       ech->padding1[2] == 'F';
+}
+
 /**
  * scan_peb - scan and process UBI headers of a PEB.
  * @ubi: UBI device description object
@@ -832,9 +839,21 @@
 		return 0;
 	}
 
-	err = ubi_io_read_ec_hdr(ubi, pnum, ech, 0);
-	if (err < 0)
-		return err;
+	if (!ai->eof_found) {
+		err = ubi_io_read_ec_hdr(ubi, pnum, ech, 0);
+		if (err < 0)
+			return err;
+
+		if (ec_hdr_has_eof(ech)) {
+			pr_notice("UBI: EOF marker found, PEBs from %d will be erased\n",
+				pnum);
+			ai->eof_found = true;
+		}
+	}
+
+	if (ai->eof_found)
+		err = UBI_IO_FF_BITFLIPS;
+
 	switch (err) {
 	case 0:
 		break;
--- a/drivers/mtd/ubi/ubi.h	2022-07-11 14:42:58.000000000 +0100
+++ b/drivers/mtd/ubi/ubi.h	2022-06-12 16:04:56.626992171 +0100
@@ -745,6 +745,7 @@
 	int mean_ec;
 	uint64_t ec_sum;
 	int ec_count;
+	bool eof_found;
 	struct kmem_cache *aeb_slab_cache;
 };
 
