pppd: Support "nomp" option even if multilink support is off

This patch moves the "nomp" option entry outside of the defines protecting
the multilink specific code. The motivation is to allow "nomp" even if pppd
does not support multilink, so that controlling programs can unconditionally
pass it to pppd regardless of the compile time features.

Signed-off-by: Jo-Philipp Wich <jo@mein.io>

--- a/pppd/options.c
+++ b/pppd/options.c
<<<<<<< HEAD
@@ -379,13 +379,14 @@ struct option general_options[] = {
=======
@@ -349,13 +349,14 @@ option_t general_options[] = {
>>>>>>> 712839d4c6 (Removed unwanted submodules from index)
       "Enable multilink operation", OPT_PRIOSUB | OPT_ALIAS | 1 },
     { "nomultilink", o_bool, &multilink,
       "Disable multilink operation", OPT_PRIOSUB | 0 },
-    { "nomp", o_bool, &multilink,
-      "Disable multilink operation", OPT_PRIOSUB | OPT_ALIAS | 0 },
 
     { "bundle", o_string, &bundle_name,
       "Bundle name for multilink", OPT_PRIO },
<<<<<<< HEAD
 #endif /* PPP_WITH_MULTILINK */
=======
 #endif /* HAVE_MULTILINK */
>>>>>>> 712839d4c6 (Removed unwanted submodules from index)
 
+    { "nomp", o_bool, &multilink,
+      "Disable multilink operation", OPT_PRIOSUB | OPT_ALIAS | 0 },
+
<<<<<<< HEAD
 #ifdef PPP_WITH_PLUGINS
=======
 #ifdef PLUGIN
>>>>>>> 712839d4c6 (Removed unwanted submodules from index)
     { "plugin", o_special, (void *)loadplugin,
       "Load a plug-in module into pppd", OPT_PRIV | OPT_A2LIST },
